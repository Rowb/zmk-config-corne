#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3
#define GME 4

&led_strip {
    chain-length = <27>;

    // chain-length = <27>;
    // 21 backlight + 6 glowlight
};

&lt { quick-tap-ms = <200>; };

&mt { quick-tap-ms = <200>; };

#define TAPPING_TERM 200

#define GREEN 0x00ff00
#define RED 0xff0000
#define BLUE 0x0000ff
#define TEAL 0x008080
#define ORANGE 0xffa500
#define YELLOW 0xffff00
#define GOLD 0xffd700
#define PURPLE 0x800080
#define PINK 0xffc0cb
#define WHITE 0xffffff
#define ______ 0x000000

/ {
    underglow-layer {
        compatible  = "zmk,underglow-layer";

        lower {
            bindings = <
                ______   RED   RED   RED   RED   RED                         RED   RED RED RED RED    RED
                BLUE BLUE BLUE    BLUE BLUE BLUE                              BLUE BLUE BLUE BLUE BLUE BLUE
                ______ PURPLE    PURPLE    PURPLE    PURPLE PURPLE                          PURPLE PURPLE PURPLE PURPLE    PURPLE   ______
                                                          YELLOW  ______ ______  ______ ______ YELLOW
                >;
            layer-id = <LWR>;
        };
        raise {
            bindings = <
                WHITE   RED   BLUE   BLUE   BLUE   RED                                            ______   GOLD ORANGE ORANGE ORANGE    RED
                RED RED BLUE    BLUE BLUE RED                                            ______ YELLOW BLUE BLUE BLUE ______
                  ______ BLUE    BLUE    BLUE    BLUE PURPLE                                            ______ YELLOW YELLOW YELLOW    RED   BLUE
                                                          ______  ______ GREEN  GREEN ______ ______
                >;
            layer-id = <RSE>;
        };
        adjust {
            bindings = <
                PURPLE  TEAL  ______  ______  ______  ______              ______  ______  ______  ______  ______  ______
                RED BLUE  BLUE  BLUE  BLUE  BLUE                           BLUE BLUE BLUE BLUE BLUE RED
                  GREEN ______     ______     ______    ______ ______                                            ______ ______ ______ ______    ______   ______
                                                          ______  ______ ______  ______ ______ ______
                >;
            layer-id = <ADJ>;
        };
    };
};

/ {
    behaviors {
        /*
    * td_lock groups locking functions into one key:
    *  - tap once to lock the host
    *  - tap twice to put the host to sleep
    */

        td_lock: tap_dance_lock {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_LOCK";
            #binding-cells = <0>;
            tapping-term-ms = <TAPPING_TERM>;
            bindings = <&kp LG(LC(Q))>, <&kp LG(LA(C_EJECT))>;
        };
    };

    combos {
        compatible = "zmk,combos";

        to_game_layer {
            bindings = <&to 4>;
            key-positions = <27 14>;
            layers = <0>;
        };

        to_default {
            bindings = <&to 0>;
            key-positions = <15 3>;
            layers = <4>;
        };

        backspace_combo {
            bindings = <&kp BACKSPACE>;
            key-positions = <37 36>;
            layers = <0>;
        };

        delete_combo {
            bindings = <&kp DEL>;
            key-positions = <37 38>;
            layers = <0>;
        };

        git_pull {
            bindings = <&git_pull>;
            key-positions = <29 28>;
            layers = <3>;
        };

        cs_mic {
            bindings = <&kp K>;
            key-positions = <37 38>;
            layers = <4>;
        };

        copy {
            bindings = <&kp LC(C)>;
            key-positions = <2 3 4>;
            layers = <0 1 2>;
        };

        paste {
            bindings = <&kp LC(V)>;
            key-positions = <2 4>;
            layers = <0 2 1>;
        };

        cut {
            bindings = <&kp LC(X)>;
            key-positions = <2 3>;
            layers = <0 1 2>;
        };
    };

    macros {
        git_status: git_status {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp G &kp I &kp T &kp SPACE &kp S &kp T &kp A &kp T &kp U &kp S>;
            label = "GIT_STATUS";
        };

        git_commit_all: git_commit_all {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp G &kp I &kp T &kp SPACE &kp C &kp O &kp M &kp M &kp I &kp T &kp SPACE &kp MINUS &kp A &kp SPACE &kp MINUS &kp M &kp SPACE &kp DQT &kp DQT &kp LEFT_ARROW>;
            label = "GIT_COMMIT";
        };

        git_add: git_add {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp G &kp I &kp T &kp SPACE &kp A &kp D &kp D &kp SPACE &kp DOT>;
            label = "GIT_ADD";
        };

        git_pull: git_pull {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp G &kp I &kp T &kp SPACE &kp P &kp U &kp L &kp L>;
            label = "GIT_PULL";
        };

        git_push: git_push {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp G &kp I &kp T &kp SPACE &kp P &kp U &kp S &kp H>;
            label = "GIT_PUSH";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&mt LEFT_GUI RIGHT_BRACKET  &kp Q  &kp W  &kp E      &kp R            &kp T        &kp Y      &kp U          &kp I      &kp O    &kp P     &mt RIGHT_GUI LEFT_BRACKET
&kp LCTRL                   &kp A  &kp S  &kp D      &kp F            &kp G        &kp H      &kp J          &kp K      &kp L    &kp SEMI  &mt RCTRL SQT
&kp LALT                    &kp Z  &kp X  &kp C      &kp V            &kp B        &kp N      &kp M          &kp COMMA  &kp DOT  &kp FSLH  &mt RALT BSLH
                                          &lt 2 TAB  &mt LSHFT SPACE  &lt 1 RET    &lt 1 ESC  &kp BACKSPACE  &lt 2 DEL
            >;
        };

        lower_layer {
            bindings = <
&kp UNDER       &kp F1    &kp F2  &kp F3    &kp F4    &kp F5       &kp F6     &kp F7    &kp F8    &kp F9    &kp F10   &kp F11
&mt LCTRL PLUS  &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS  &kp STAR  &kp LPAR  &kp RPAR  &mt RCTRL MINUS
&mt LALT EQUAL  &kp N1    &kp N2  &kp N3    &kp N4    &kp N5       &kp N6     &kp N7    &kp N8    &kp N9    &kp N0    &trans
                                  &kp TAB   &trans    &trans       &trans     &trans    &kp DEL
            >;
        };

        raise_layer {
            bindings = <
&kp KP_NUM       &kp SLASH     &kp N1        &kp N2        &kp N3        &kp MINUS     &kp C_VOL_UP  &kp HOME  &kp PSCRN  &kp PG_UP  &kp SLCK         &kp CAPS
&mt LCTRL EQUAL  &kp ASTERISK  &kp N4        &kp N5        &kp N6        &kp PLUS      &kp C_MUTE    &kp LEFT  &kp UP     &kp RIGHT  &kp INS          &mt RCTRL K_APP
&trans           &kp NUMBER_0  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp PERIOD    &kp C_VOL_DN  &kp END   &kp DOWN   &kp PG_DN  &kp PAUSE_BREAK  &trans
                                             &trans        &trans        &kp RET       &kp ESCAPE    &trans    &trans
            >;
        };

        adjust_layer {
            bindings = <
&bootloader   &sys_reset    &none         &none         &none            &none           &rgb_ug RGB_TOG  &rgb_ug RGB_EFF  &none            &none  &none  &none
&bt BT_CLR    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3     &bt BT_SEL 4    &rgb_ug RGB_BRI  &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &none  &none  &none
&out OUT_TOG  &none         &none         &git_add      &git_commit_all  &git_push       &rgb_ug RGB_BRD  &rgb_ug RGB_HUD  &rgb_ug RGB_SAD  &none  &none  &none
                                          &trans        &none            &trans          &trans           &none            &trans
            >;
        };

        game_layer {
            bindings = <
&kp ESCAPE      &kp N1  &kp N2  &kp N3  &kp N4     &kp NUMBER_5    &kp F1     &kp F2  &kp T   &trans  &trans       &kp C_VOLUME_UP
&kp LEFT_SHIFT  &kp Q   &kp W   &kp E   &kp R      &kp G           &kp GRAVE  &trans  &trans  &trans  &kp LA(TAB)  &kp C_VOL_DN
&kp LCTRL       &kp A   &kp S   &kp D   &kp B      &kp F           &trans     &kp M   &trans  &trans  &kp LS(TAB)  &kp K_MUTE
                                &kp C   &kp SPACE  &kp TAB         &kp K      &trans  &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        adj_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
