#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3
#define GME 4

&led_strip {
    chain-length = <27>;
};

&lt { quick-tap-ms = <200>; };

&mt { quick-tap-ms = <200>; };


  / {
      combos {
        compatible = "zmk,combos";

        combo_to_game_layer {
            bindings = <&to 4>;
            key-positions = <27 14>;
            layers = <0>;
        };

        combo_to_default {
            bindings = <&to 0>;
            key-positions = <15 3>;
            layers = <4>;
        };

        combo_backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <37 36>;
            layers = <0>;
        };

        combo_delete {
            bindings = <&kp DEL>;
            key-positions = <37 38>;
            layers = <0>;
        };

        combo_git_pull {
            bindings = <&git_pull>;
            key-positions = <29 28>;
            layers = <3>;
        };

        combo_cs_mic {
            bindings = <&kp K>;
            key-positions = <37 38>;
            layers = <4>;
        };

        combo_copy {
            bindings = <&kp LC(C)>;
            key-positions = <2 3 4>;
            layers = <0>;
        };

        combo_paste {
            bindings = <&kp LC(V)>;
            key-positions = <2 4>;
            layers = <0>;
        };

        combo_cut {
            bindings = <&kp LC(X)>;
            key-positions = <2 3>;
            layers = <0>;
        };
    };

    macros {
        git_status: git_status {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp G &kp I &kp T &kp SPACE &kp S &kp T &kp A &kp T &kp U &kp S>;
            label = "GIT_STATUS";
        };

        git_commit_all: git_commit_all {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp G &kp I &kp T &kp SPACE &kp C &kp O &kp M &kp M &kp I &kp T &kp SPACE &kp MINUS &kp A &kp SPACE &kp MINUS &kp M &kp SPACE &kp DQT &kp DQT &kp LEFT_ARROW>;
            label = "GIT_COMMIT";
        };

        git_add: git_add {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp G &kp I &kp T &kp SPACE &kp A &kp D &kp D &kp SPACE &kp DOT>;
            label = "GIT_ADD";
        };

        git_pull: git_pull {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp G &kp I &kp T &kp SPACE &kp P &kp U &kp L &kp L>;
            label = "GIT_PULL";
        };

        git_push: git_push {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp G &kp I &kp T &kp SPACE &kp P &kp U &kp S &kp H>;
            label = "GIT_PUSH";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&mt LEFT_GUI RIGHT_BRACKET  &kp Q  &kp W  &kp E      &kp R            &kp T        &kp Y      &kp U          &kp I      &kp O    &kp P     &mt RIGHT_GUI LEFT_BRACKET
&kp LCTRL                   &kp A  &kp S  &kp D      &kp F            &kp G        &kp H      &kp J          &kp K      &kp L    &kp SEMI  &mt RCTRL SQT
&kp LALT                    &kp Z  &kp X  &kp C      &kp V            &kp B        &kp N      &kp M          &kp COMMA  &kp DOT  &kp FSLH  &mt RALT BSLH
                                          &lt 2 TAB  &mt LSHFT SPACE  &lt 1 ENTER    &lt 1 ESC  &kp BACKSPACE  &lt 2 DEL
            >;
        };

        lower_layer {
            bindings = <
&kp UNDER       &kp F1    &kp F2  &kp F3     &kp F4    &kp F5       &kp F6     &kp F7    &kp F8     &kp F9    &kp F10   &kp F11
&mt LCTRL PLUS  &kp EXCL  &kp AT  &kp HASH   &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS  &kp STAR   &kp LPAR  &kp RPAR  &mt RCTRL MINUS
&mt LALT EQUAL  &kp N1    &kp N2  &kp N3     &kp N4    &kp N5       &kp N6     &kp N7    &kp N8     &kp N9    &kp N0    &trans
                                  &lt 3 TAB  &trans    &trans       &trans     &trans    &lt 3 DEL
            >;
        };

        raise_layer {
            bindings = <
&kp KP_NUM       &kp SLASH     &kp N1        &kp N2        &kp N3        &kp MINUS      &kp C_VOL_UP  &kp HOME  &kp PSCRN  &kp PG_UP  &kp SLCK         &kp CAPS
&mt LCTRL EQUAL  &kp ASTERISK  &kp N4        &kp N5        &kp N6        &kp PLUS       &kp C_MUTE    &kp LEFT  &kp UP     &kp RIGHT  &kp INS          &mt RCTRL K_APP
&trans           &kp NUMBER_0  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp PERIOD     &kp C_VOL_DN  &kp END   &kp DOWN   &kp PG_DN  &kp PAUSE_BREAK  &trans
                                             &trans        &trans        &lt 3 ENTER    &lt 3 ESC     &trans    &trans
            >;
        };

        adjust_layer {
            bindings = <
&bootloader   &sys_reset    &studio_unlock         &none         &none            &none           &rgb_ug RGB_TOG  &rgb_ug RGB_EFF  &none            &none  &none  &none
&bt BT_CLR    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3     &bt BT_SEL 4    &rgb_ug RGB_BRI  &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &none  &none  &none
&out OUT_TOG  &none         &none         &git_add      &git_commit_all  &git_push       &rgb_ug RGB_BRD  &rgb_ug RGB_HUD  &rgb_ug RGB_SAD  &none  &none  &none
                                          &trans        &none            &trans          &trans           &none            &trans
            >;
        };

        game_layer {
            bindings = <
&kp ESCAPE      &kp N1  &kp N2  &kp N3  &kp N4     &kp NUMBER_5    &kp F1     &kp F2  &kp T   &trans  &trans       &kp C_VOL_UP
&kp LEFT_SHIFT  &kp Q   &kp W   &kp E   &kp R      &kp G           &kp GRAVE  &trans  &trans  &trans  &kp LA(TAB)  &kp C_VOL_DN
&kp LCTRL       &kp A   &kp S   &kp D   &kp B      &kp F           &trans     &kp M   &trans  &trans  &kp LS(TAB)  &kp C_MUTE
                                &kp C   &kp SPACE  &kp TAB         &kp K      &trans  &trans
            >;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
